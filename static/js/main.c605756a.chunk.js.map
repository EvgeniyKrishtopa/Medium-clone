{"version":3,"sources":["hooks/useLocalStorage.js","hooks/useFetch.js","components/tagList.js","components/addToFavorites.js","utils.js","components/feed.js","components/pagination.js","components/loading.js","components/error.js","components/popularTags.js","contexts/currentUser.js","components/feedToggler.js","pages/globalFeed/index.js","pages/tagFeed/index.js","pages/yourFeed/index.js","pages/article/index.js","components/backendErrorMessages.js","components/articleForm.js","pages/createArticle/index.js","pages/editArticle/index.js","pages/authentication/index.js","pages/settings/index.js","pages/userProfile/components/userArticles.js","pages/userProfile/index.js","routes.js","components/topBar.js","components/currentUserChecker.js","index.js"],"names":["key","initialValue","useState","localStorage","getItem","value","setValue","useEffect","setItem","url","path","isLoading","setIsLoading","response","setResponse","error","setError","options","setOptions","useLocalStorage","token","prevPathRef","useRef","current","prevPath","doFetch","useCallback","skipGetResponseAfterDestroy","requestOptions","headers","authorization","axios","then","res","data","catch","err","TagList","tags","className","map","tag","AddToFavorites","isFavorited","isFavoritesCount","isArticleSlug","apiUrl","useFetch","favoritesCountWithResponse","article","favoritesCount","isFavoritedWithResponse","favorited","buttonClasses","classNames","onClick","e","preventDefault","method","getPaginator","search","parsedSearch","parse","currentPage","page","Number","offset","Feed","articles","index","author","createdAt","title","description","tagList","slug","to","username","src","alt","date","Date","day","getDate","month","getMonth","getFullYear","dataFormatToggled","style","overflowWrap","PaginationItem","liClasses","active","Pagination","start","end","total","limit","pagesCount","Math","ceil","pages","Array","keys","el","Loading","Error","PopularTags","filteredTags","setFilteredTags","replace","filter","length","initialState","isLoggedIn","currentUser","reducer","state","action","type","payload","CurrentUserContext","createContext","CurrentUserProvider","children","useReducer","Provider","FeedToggler","tagName","useContext","exact","GlobalFeed","location","match","articlesCount","TagFeed","params","CurrentUserArticlesInfo","YourFeed","Article","props","isSuccessfullDelete","setIsSuccesfullDelete","deleteArticleResponse","doDeleteArticle","currentUserState","body","ErrosList","errorMessages","messagesList","items","errorMessage","BackendErrorMessages","backendError","messages","Object","name","message","join","ArticleFrom","onSubmit","errors","initialValues","setTitle","setBody","setDescription","setTagList","placeholder","onChange","target","rows","CreateArticle","isSuccessFullSubmit","setIsSuccessFullSubmit","split","EditArticle","fetchArticleResponse","doFetchArticle","updateArticleResponse","updateArticleError","doUpdateArticle","setInitialValues","Authentication","isLogin","pageTitle","descriptionLink","descriptionText","setUserName","email","setEmail","password","setPassword","setToken","dispatch","user","event","disabled","SettingsPage","setUsername","bio","setBio","isSuccessFullLogOut","setIsSuccessFullLogOut","ArticlesInfo","UserArticles","isFavorites","stringify","getApiUrl","UserProfile","pathname","includes","profile","component","TopBar","CurrentUserChecker","App","basename","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c605756a.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport default (key, initialValue = \"\") => {\r\n  const [value, setValue] = useState(() => {\r\n    return localStorage.getItem(key) || initialValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, value);\r\n  }, [key, value]);\r\n\r\n  return [value, setValue];\r\n};\r\n","import { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport useLocalStorage from \"./useLocalStorage\";\r\nimport axios from \"axios\";\r\n\r\nexport default (url, { path }) => {\r\n  const baseUrl = \"https://conduit.productionready.io/api/\";\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [options, setOptions] = useState({});\r\n  const [token] = useLocalStorage(\"token\");\r\n\r\n  const prevPathRef = useRef();\r\n\r\n  useEffect(() => {\r\n    prevPathRef.current = path;\r\n  }, [path]);\r\n\r\n  const prevPath = prevPathRef.current;\r\n\r\n  const doFetch = useCallback((options = {}) => {\r\n    setOptions(options);\r\n    setIsLoading(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let skipGetResponseAfterDestroy = false;\r\n    const requestOptions = {\r\n      ...options,\r\n      ...{\r\n        headers: {\r\n          authorization: token ? `Token ${token}` : \"\",\r\n        },\r\n      },\r\n    };\r\n\r\n    if (!isLoading) {\r\n      return;\r\n    }\r\n\r\n    axios(baseUrl + url, requestOptions)\r\n      .then((res) => {\r\n        if (!skipGetResponseAfterDestroy) {\r\n          setIsLoading(false);\r\n          setResponse(res.data);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (!skipGetResponseAfterDestroy) {\r\n          setIsLoading(false);\r\n          setError(err.response.data);\r\n        }\r\n      });\r\n\r\n    return () => {\r\n      skipGetResponseAfterDestroy = true;\r\n    };\r\n  }, [isLoading, options, url, path, token]);\r\n\r\n  useEffect(() => {\r\n    if (path !== prevPath) {\r\n      setError(null);\r\n    }\r\n  }, [path, prevPath]);\r\n\r\n  return [{ isLoading, response, error }, doFetch];\r\n};\r\n","import React from \"react\";\r\n\r\nconst TagList = ({ tags }) => {\r\n  return (\r\n    <ul className=\"tag-list\">\r\n      {tags.map((tag) => (\r\n        <li key={tag} className=\"tag-default tag-pill tag-outline\">\r\n          {tag}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TagList;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport useFetch from \"../hooks/useFetch\";\r\n\r\nconst AddToFavorites = ({ isFavorited, isFavoritesCount, isArticleSlug }) => {\r\n  const apiUrl = `articles/${isArticleSlug}/favorite`;\r\n  const [{ response }, doFetch] = useFetch(apiUrl, {});\r\n  const favoritesCountWithResponse = response\r\n    ? response.article.favoritesCount\r\n    : isFavoritesCount;\r\n  const isFavoritedWithResponse = response\r\n    ? response.article.favorited\r\n    : isFavorited;\r\n\r\n  const buttonClasses = classNames({\r\n    \"btn\": true,\r\n    \"btn-sm\": true,\r\n    \"btn-primary\": isFavoritedWithResponse,\r\n    \"btn-outline-primary\": !isFavoritedWithResponse,\r\n  });\r\n\r\n  const handleLike = (e) => {\r\n    e.preventDefault();\r\n\r\n    doFetch({\r\n      method: isFavoritedWithResponse ? \"delete\" : \"post\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <button className={buttonClasses} onClick={handleLike}>\r\n      <i className=\"ion-heart\"></i>\r\n      <span>&nbsp; {favoritesCountWithResponse}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default AddToFavorites;\r\n","import { parse } from \"query-string\";\r\n\r\nexport const range = (start, end) => {\r\n  return [...Array(end).keys()].map((el) => el + start);\r\n};\r\n\r\nexport const limit = 10;\r\n\r\nexport const getPaginator = (search) => {\r\n  const parsedSearch = parse(search);\r\n  const currentPage = parsedSearch.page ? Number(parsedSearch.page) : 1;\r\n  const offset = currentPage * 10 - limit;\r\n  return { currentPage, offset };\r\n};\r\n\r\nexport const dataFormatToggled = (createdAt) => {\r\n  const date = new Date(createdAt);\r\n  const day = date.getDate() >= 10 ? date.getDate() : `0${date.getDate()}`;\r\n  const month =\r\n    date.getMonth() + 1 >= 10 ? date.getMonth() + 1 : `0${date.getMonth()}`;\r\n  return `${day}.${month}.${date.getFullYear()}`;\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TagList from \"./tagList\";\r\nimport AddToFavorites from \"./addToFavorites\";\r\nimport { dataFormatToggled } from \"../utils\";\r\n\r\nconst Feed = ({ articles }) => {\r\n  if (!articles) {\r\n    return;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {articles.map(\r\n        (\r\n          {\r\n            author,\r\n            createdAt,\r\n            title,\r\n            description,\r\n            tagList,\r\n            favorited,\r\n            favoritesCount,\r\n            slug,\r\n          },\r\n          index\r\n        ) => (\r\n          <div className=\"article-preview\" key={index}>\r\n            <div className=\"article-meta\">\r\n              <Link to={`/profiles/${author.username}`}>\r\n                <img\r\n                  src=\"https://static.productionready.io/images/smiley-cyrus.jpg\"\r\n                  alt=\"\"\r\n                />\r\n              </Link>\r\n              <div className=\"info\">\r\n                <Link to={`/profiles/${author.username}`} className=\"author\">\r\n                  {author.username}\r\n                </Link>\r\n                <span className=\"date\">{dataFormatToggled(createdAt)}</span>\r\n              </div>\r\n              <div className=\"pull-xs-right\">\r\n                <AddToFavorites\r\n                  isFavorited={favorited}\r\n                  isFavoritesCount={favoritesCount}\r\n                  isArticleSlug={slug}\r\n                />\r\n              </div>\r\n            </div>\r\n            <Link to={`/articles/${slug}`} className=\"preview-link\">\r\n              <h1>{title}</h1>\r\n              <p style={{ overflowWrap: \"break-word\" }}>{description}</p>\r\n              <span>Read more...</span>\r\n              <TagList tags={tagList} />\r\n            </Link>\r\n          </div>\r\n        )\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n","import React from \"react\";\r\nimport { range } from \"../utils\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\nconst PaginationItem = ({ page, currentPage, url }) => {\r\n  const liClasses = classNames({\r\n    \"page-item\": true,\r\n    active: currentPage === page,\r\n  });\r\n\r\n  return (\r\n    <li className={liClasses} key={page}>\r\n      <Link to={`${url}?page=${page}`} className=\"page-link\">\r\n        {page}\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst Pagination = ({ total, limit, url, currentPage }) => {\r\n  const pagesCount = Math.ceil(total / limit);\r\n  const pages = range(1, pagesCount);\r\n\r\n  return (\r\n    <ul className=\"pagination\">\r\n      {pages.map((page) => (\r\n        <PaginationItem\r\n          page={page}\r\n          url={url}\r\n          currentPage={currentPage}\r\n          key={page}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n  return <div>Loading...</div>;\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\n\r\nconst Error = () => {\r\n  return <div>Some error happened!</div>;\r\n};\r\n\r\nexport default Error;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport useFetch from \"../hooks/useFetch\";\r\nimport Loading from \"./loading\";\r\nimport Error from \"./error\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PopularTags = () => {\r\n  const [{ response, isLoading, error }, doFetch] = useFetch(\"tags\", {});\r\n  const [filteredTags, setFilteredTags] = useState([]);\r\n\r\n  useEffect(() => {\r\n    doFetch();\r\n  }, [doFetch]);\r\n\r\n  useEffect(() => {\r\n    if (response) {\r\n      const tags = response.tags\r\n        .map((tag) => tag.replace(/\\u200c/g, \"\"))\r\n        .filter((tag) => tag.length !== 0);\r\n      setFilteredTags(tags);\r\n    }\r\n  }, [response]);\r\n\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (error) {\r\n    return <Error />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <p>Popular tags</p>\r\n      <div className=\"tag-list\">\r\n        {!isLoading &&\r\n          response &&\r\n          filteredTags &&\r\n          filteredTags.map((tag, index) => (\r\n            <Link\r\n              to={`/tags/${tag}`}\r\n              className=\"tag-default tag-pill\"\r\n              key={index}\r\n            >\r\n              {tag}\r\n            </Link>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PopularTags;\r\n","import React, { createContext, useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  isLoggedIn: false,\r\n  currentUser: null,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"LOADING\":\r\n      return { ...state, isLoading: true };\r\n    case \"SET_AUTHORIZED\":\r\n      return { ...state, isLoggedIn: true, currentUser: action.payload };\r\n    case \"SET_UNAUTHORIZED\":\r\n      return { ...state, isLoggedIn: false };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...initialState,\r\n        isLoggedIn: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const CurrentUserContext = createContext();\r\n\r\nexport const CurrentUserProvider = ({ children }) => {\r\n  const value = useReducer(reducer, initialState);\r\n  return (\r\n    <CurrentUserContext.Provider value={value}>\r\n      {children}\r\n    </CurrentUserContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { CurrentUserContext } from \"../contexts/currentUser\";\r\n\r\nconst FeedToggler = ({ tagName }) => {\r\n  const [{ isLoggedIn }] = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <div className=\"feed-toggle\">\r\n      <ul className=\"nav nav-pills outline-active\">\r\n        {isLoggedIn && (\r\n          <li className=\"nav-item\">\r\n            <NavLink to=\"/feed\" className=\"nav-link\">\r\n              Your feed\r\n            </NavLink>\r\n          </li>\r\n        )}\r\n        <li className=\"nav-item\">\r\n          <NavLink to=\"/\" className=\"nav-link\" exact>\r\n            Global feed\r\n          </NavLink>\r\n        </li>\r\n        {tagName && (\r\n          <li className=\"nav-item\">\r\n            <NavLink to={`/tags/${tagName}`} className=\"nav-link\">\r\n              <i className=\"ion-pound\"></i>\r\n              {tagName}\r\n            </NavLink>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedToggler;\r\n","import React, { useEffect } from \"react\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport Feed from \"../../components/feed\";\r\nimport Pagination from \"../../components/pagination\";\r\nimport PopularTags from \"../../components/popularTags\";\r\nimport Loading from \"../../components/loading\";\r\nimport Error from \"../../components/error\";\r\nimport FeedToggler from \"../../components/feedToggler\";\r\nimport { limit, getPaginator } from \"../../utils\";\r\n\r\nconst GlobalFeed = ({ location, match }) => {\r\n  const { offset, currentPage } = getPaginator(location.search);\r\n  const apiUrl = `articles?limit=${limit}&offset=${offset}`;\r\n  const [{ response, isLoading, error }, doFetch] = useFetch(apiUrl, {});\r\n\r\n  useEffect(() => {\r\n    doFetch();\r\n  }, [doFetch, currentPage]);\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <div className=\"banner\">\r\n        <div className=\"container\">\r\n          <h1>Medium-clone</h1>\r\n          <p>A place to share knowledge</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"container page\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9\">\r\n            <FeedToggler />\r\n            {isLoading && <Loading />}\r\n            {error && <Error />}\r\n            {!isLoading && response && (\r\n              <>\r\n                <Feed articles={response.articles} />\r\n                <Pagination\r\n                  total={response.articlesCount}\r\n                  limit={limit}\r\n                  url={match.url}\r\n                  currentPage={currentPage}\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <PopularTags />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GlobalFeed;\r\n","import React, { useEffect } from \"react\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport Feed from \"../../components/feed\";\r\nimport Pagination from \"../../components/pagination\";\r\nimport PopularTags from \"../../components/popularTags\";\r\nimport Loading from \"../../components/loading\";\r\nimport Error from \"../../components/error\";\r\nimport FeedToggler from \"../../components/feedToggler\";\r\nimport { limit, getPaginator } from \"../../utils\";\r\n\r\nconst TagFeed = ({ location, match }) => {\r\n  const tagName = match.params.slug;\r\n\r\n  const { offset, currentPage } = getPaginator(location.search);\r\n  const apiUrl = `articles?limit=${limit}&offset=${offset}&tag=${tagName}`;\r\n  const [{ response, isLoading, error }, doFetch] = useFetch(apiUrl, {});\r\n\r\n  useEffect(() => {\r\n    doFetch();\r\n  }, [doFetch, currentPage, tagName]);\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <div className=\"banner\">\r\n        <div className=\"container\">\r\n          <h1>Medium-clone</h1>\r\n          <p>A place to share knowledge</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"container page\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9\">\r\n            <FeedToggler tagName={tagName} />\r\n            {isLoading && <Loading />}\r\n            {error && <Error />}\r\n            {!isLoading && response && (\r\n              <>\r\n                <Feed articles={response.articles} />\r\n                <Pagination\r\n                  total={response.articlesCount}\r\n                  limit={limit}\r\n                  url={match.url}\r\n                  currentPage={currentPage}\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <PopularTags />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagFeed;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport Feed from \"../../components/feed\";\r\nimport PopularTags from \"../../components/popularTags\";\r\nimport Loading from \"../../components/loading\";\r\nimport Error from \"../../components/error\";\r\nimport FeedToggler from \"../../components/feedToggler\";\r\nimport { limit, getPaginator } from \"../../utils\";\r\nimport { CurrentUserContext } from \"../../contexts/currentUser\";\r\nimport Pagination from \"../../components/pagination\";\r\n\r\nconst CurrentUserArticlesInfo = ({\r\n  articles,\r\n  total,\r\n  limit,\r\n  url,\r\n  currentPage,\r\n}) => {\r\n  if (articles.length) {\r\n    return (\r\n      <>\r\n        <Feed articles={articles} />\r\n        <Pagination\r\n          total={total}\r\n          limit={limit}\r\n          url={url}\r\n          currentPage={currentPage}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n  return <p>No articles are here... yet.</p>;\r\n};\r\n\r\nconst YourFeed = ({ location, match }) => {\r\n  const { offset, currentPage } = getPaginator(location.search);\r\n  const [{ currentUser }] = useContext(CurrentUserContext);\r\n  const apiUrl =\r\n    currentUser &&\r\n    `articles?author=${currentUser.username}&limit=${limit}&offset=${offset}`;\r\n  const [{ response, isLoading, error }, doFetch] = useFetch(apiUrl, {});\r\n\r\n  useEffect(() => {\r\n    if (apiUrl) {\r\n      doFetch();\r\n    }\r\n  }, [doFetch, currentPage, apiUrl]);\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <div className=\"banner\">\r\n        <div className=\"container\">\r\n          <h1>Medium-clone</h1>\r\n          <p>A place to share knowledge</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"container page\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9\">\r\n            <FeedToggler />\r\n            {isLoading && <Loading />}\r\n            {error && <Error />}\r\n            {!isLoading && response && (\r\n              <CurrentUserArticlesInfo\r\n                articles={response.articles}\r\n                limit={limit}\r\n                currentPage={currentPage}\r\n                total={response.articlesCount}\r\n                url={match.url}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <PopularTags />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YourFeed;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport Loading from \"../../components/loading\";\r\nimport Error from \"../../components/error\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TagList from \"../../components/tagList\";\r\nimport { CurrentUserContext } from \"../../contexts/currentUser\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Article = (props) => {\r\n  const slug = props.match.params.slug;\r\n  const apiUrl = `articles/${slug}`;\r\n  const [isSuccessfullDelete, setIsSuccesfullDelete] = useState(false);\r\n  const [{ isLoading, response, error }, doFetch] = useFetch(apiUrl, {});\r\n  const [{ response: deleteArticleResponse }, doDeleteArticle] = useFetch(\r\n    apiUrl,\r\n    {}\r\n  );\r\n  const [currentUserState] = useContext(CurrentUserContext);\r\n\r\n  const isAuthor = () => {\r\n    if (!response || !currentUserState.isLoggedIn) {\r\n      return false;\r\n    }\r\n\r\n    return (\r\n      response.article.author.username === currentUserState.currentUser.username\r\n    );\r\n  };\r\n\r\n  const deleteArticle = () => {\r\n    doDeleteArticle({\r\n      method: \"delete\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    doFetch();\r\n  }, [slug, doFetch]);\r\n\r\n  useEffect(() => {\r\n    if (!deleteArticleResponse) {\r\n      return;\r\n    }\r\n\r\n    setIsSuccesfullDelete(true);\r\n  }, [deleteArticleResponse, setIsSuccesfullDelete]);\r\n\r\n  if (isSuccessfullDelete) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"article-page\">\r\n      <div className=\"banner\">\r\n        {!isLoading && response && (\r\n          <div className=\"container\">\r\n            <h1>{response.article.title}</h1>\r\n            <div className=\"article-meta\">\r\n              <div className=\"info\">\r\n                <Link to={`/profiles/${response.article.author.username}`}>\r\n                  {response.article.author.username}\r\n                </Link>\r\n                <span className=\"date\">{response.article.createdAt}</span>\r\n              </div>\r\n              {isAuthor() && (\r\n                <span>\r\n                  <Link\r\n                    className=\"btn btn-outline-secondary btn-sm\"\r\n                    to={`/articles/${response.article.slug}/edit`}\r\n                  >\r\n                    <i className=\"ion-edit\"></i>\r\n                    Edit Article\r\n                  </Link>\r\n                  &nbsp;&nbsp;\r\n                  <button\r\n                    className=\"btn btn-outline-danger btn-sm\"\r\n                    onClick={deleteArticle}\r\n                  >\r\n                    Delete article\r\n                  </button>\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"container page\">\r\n        {isLoading && <Loading />}\r\n        {error && <Error />}\r\n        {!isLoading && response && (\r\n          <div className=\"row article-content\">\r\n            <div className=\"col-xs-12\">\r\n              <div>\r\n                <p>{response.article.body}</p>\r\n              </div>\r\n              <TagList tags={response.article.tagList} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Article;\r\n","import React from \"react\";\r\n\r\nconst ErrosList = (...errorMessages) => {\r\n  const [messagesList] = errorMessages;\r\n\r\n  const items = messagesList.errorMessages.map((errorMessage) => {\r\n    return <li key={errorMessage}>{errorMessage}</li>;\r\n  });\r\n\r\n  return <ul className=\"error-messages\">{items}</ul>;\r\n};\r\n\r\nconst BackendErrorMessages = ({ backendError }) => {\r\n  const errorKeys = Object.keys(backendError);\r\n  const messages = errorKeys.map((name) => {\r\n    const message = backendError[name].join(\"\");\r\n    return `${name} ${message}`;\r\n  });\r\n\r\n  return <ErrosList errorMessages={messages} />;\r\n};\r\n\r\nexport default BackendErrorMessages;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport BackendErrorMessages from \"../components/backendErrorMessages\";\r\n\r\nconst ArticleFrom = ({ onSubmit, errors, initialValues }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [tagList, setTagList] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!initialValues) {\r\n      return;\r\n    }\r\n\r\n    setTitle(initialValues.title);\r\n    setBody(initialValues.body);\r\n    setDescription(initialValues.description);\r\n    setTagList(initialValues.tagList.join(\" \"));\r\n  }, [initialValues]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    onSubmit({ title, body, description, tagList });\r\n  };\r\n\r\n  return (\r\n    <div className=\"editor-page\">\r\n      <div className=\"container page\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-10 offset-md-1 col-xs-12\">\r\n            {errors && <BackendErrorMessages backendError={errors} />}\r\n            <form onSubmit={handleSubmit}>\r\n              <fieldset>\r\n                <fieldset className=\"form-group\">\r\n                  <input\r\n                    className=\"form-control from-control-lg\"\r\n                    type=\"text\"\r\n                    placeholder=\"Article title\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                  />\r\n                </fieldset>\r\n\r\n                <fieldset className=\"form-group\">\r\n                  <input\r\n                    className=\"form-control from-control-lg\"\r\n                    type=\"text\"\r\n                    placeholder=\"What is this article about?\"\r\n                    value={body}\r\n                    onChange={(e) => setBody(e.target.value)}\r\n                  />\r\n                </fieldset>\r\n\r\n                <fieldset className=\"form-group\">\r\n                  <textarea\r\n                    rows=\"8\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Write your article (in markdown)\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  ></textarea>\r\n                </fieldset>\r\n\r\n                <fieldset className=\"form-group\">\r\n                  <input\r\n                    className=\"form-control from-control-lg\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter tags\"\r\n                    value={tagList}\r\n                    onChange={(e) => setTagList(e.target.value)}\r\n                  />\r\n                </fieldset>\r\n\r\n                <fieldset className=\"form-group\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-lg pull-xs-right btn-primary\"\r\n                  >\r\n                    Publish Article\r\n                  </button>\r\n                </fieldset>\r\n              </fieldset>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticleFrom;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport ArticleFrom from \"../../components/articleForm\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { CurrentUserContext } from \"../../contexts/currentUser\";\r\n\r\nconst CreateArticle = () => {\r\n  const apiUrl = \"articles\";\r\n\r\n  const [{ isLoggedIn }] = useContext(CurrentUserContext);\r\n  const [{ error, response }, doFetch] = useFetch(apiUrl, {});\r\n\r\n  const initialValues = {\r\n    title: \"\",\r\n    description: \"\",\r\n    body: \"\",\r\n    tagList: [],\r\n  };\r\n\r\n  const handleSubmit = (article) => {\r\n    article.tagList = article.tagList.split(\" \");\r\n    doFetch({\r\n      method: \"post\",\r\n      data: {\r\n        article,\r\n      },\r\n    });\r\n  };\r\n\r\n  const [isSuccessFullSubmit, setIsSuccessFullSubmit] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!response) {\r\n      return;\r\n    }\r\n\r\n    setIsSuccessFullSubmit(true);\r\n  }, [response]);\r\n\r\n  if (isSuccessFullSubmit) {\r\n    return <Redirect to={`/articles/${response.article.slug}`} />;\r\n  }\r\n\r\n  if (!isLoggedIn) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <ArticleFrom\r\n      errors={(error && error.errors) || {}}\r\n      initialValues={initialValues}\r\n      onSubmit={handleSubmit}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CreateArticle;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport ArticleFrom from \"../../components/articleForm\";\r\n\r\nconst EditArticle = ({ match }) => {\r\n  const slug = match.params.slug;\r\n  const apiUrl = `articles/${slug}`;\r\n\r\n  const [{ response: fetchArticleResponse }, doFetchArticle] = useFetch(\r\n    apiUrl,\r\n    {}\r\n  );\r\n  const [\r\n    { response: updateArticleResponse, error: updateArticleError },\r\n    doUpdateArticle,\r\n  ] = useFetch(apiUrl, {});\r\n\r\n  const [initialValues, setInitialValues] = useState(null);\r\n  const [isSuccessFullSubmit, setIsSuccessFullSubmit] = useState(false);\r\n\r\n  useEffect(() => {\r\n    doFetchArticle();\r\n  }, [doFetchArticle]);\r\n\r\n  useEffect(() => {\r\n    if (!fetchArticleResponse) {\r\n      return;\r\n    }\r\n\r\n    setInitialValues({\r\n      title: fetchArticleResponse.article.title,\r\n      body: fetchArticleResponse.article.body,\r\n      description: fetchArticleResponse.article.description,\r\n      tagList: fetchArticleResponse.article.tagList,\r\n    });\r\n  }, [fetchArticleResponse]);\r\n\r\n  useEffect(() => {\r\n    if (!updateArticleResponse) {\r\n      return;\r\n    }\r\n    setIsSuccessFullSubmit(true);\r\n  }, [updateArticleResponse]);\r\n\r\n  const handleSubmit = (article) => {\r\n    doUpdateArticle({\r\n      method: \"put\",\r\n      data: {\r\n        article,\r\n      },\r\n    });\r\n  };\r\n\r\n  if (isSuccessFullSubmit) {\r\n    return <Redirect to={`/articles/${updateArticleResponse.article.slug}`} />;\r\n  }\r\n\r\n  return (\r\n    <ArticleFrom\r\n      onSubmit={handleSubmit}\r\n      errors={(updateArticleError && updateArticleError.errors) || {}}\r\n      initialValues={initialValues}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EditArticle;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\r\nimport { CurrentUserContext } from \"../../contexts/currentUser\";\r\nimport BackendErrorMessages from \"../../components/backendErrorMessages\";\r\n\r\nconst Authentication = ({ match }) => {\r\n  const isLogin = match.path === \"/login\";\r\n  const pageTitle = isLogin ? \"Sign In\" : \"Sign Up\";\r\n  const descriptionLink = isLogin ? \"/register\" : \"/login\";\r\n  const descriptionText = isLogin ? \"Need an accout?\" : \"Have an account?\";\r\n  const apiUrl = isLogin ? \"/users/login\" : \"users\";\r\n  const [username, setUserName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isSuccessFullSubmit, setIsSuccessFullSubmit] = useState(\"\");\r\n  const [{ isLoading, error, response }, doFetch] = useFetch(apiUrl, match);\r\n  const [, setToken] = useLocalStorage(\"token\");\r\n  const [, dispatch] = useContext(CurrentUserContext);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const user = isLogin ? { email, password } : { email, password, username };\r\n    doFetch({\r\n      method: \"post\",\r\n      data: {\r\n        user,\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!response) {\r\n      return;\r\n    }\r\n    setToken(response.user.token);\r\n    setIsSuccessFullSubmit(true);\r\n\r\n    dispatch({ type: \"SET_AUTHORIZED\", payload: response.user });\r\n  }, [response, setToken, dispatch]);\r\n\r\n  if (isSuccessFullSubmit) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <div className=\"container page\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6 offset-md-3\">\r\n            <h1 className=\"text-xs-center\">{pageTitle}</h1>\r\n            <p className=\"text-xs-center\">\r\n              <Link to={descriptionLink}>{descriptionText}</Link>\r\n            </p>\r\n            <form onSubmit={handleSubmit}>\r\n              {error && <BackendErrorMessages backendError={error.errors} />}\r\n              <fieldset>\r\n                {!isLogin && (\r\n                  <fieldset className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder=\"Username\"\r\n                      value={username}\r\n                      onChange={(event) => setUserName(event.target.value)}\r\n                    />\r\n                  </fieldset>\r\n                )}\r\n                <fieldset className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(event) => setEmail(event.target.value)}\r\n                  />\r\n                </fieldset>\r\n                <fieldset className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(event) => setPassword(event.target.value)}\r\n                  />\r\n                </fieldset>\r\n                <button\r\n                  className=\"btn btn-lg btn-primary pull-xs-right\"\r\n                  disabled={isLoading}\r\n                >\r\n                  {pageTitle}\r\n                </button>\r\n              </fieldset>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Authentication;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\r\nimport { CurrentUserContext } from \"../../contexts/currentUser\";\r\nimport BackendErrorMessages from \"../../components/backendErrorMessages\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst SettingsPage = () => {\r\n  const apiUrl = \"user\";\r\n  const [currentUserState, dispatch] = useContext(CurrentUserContext);\r\n  const [{ response, error }, doFetch] = useFetch(apiUrl, {});\r\n  const [, setToken] = useLocalStorage(\"token\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isSuccessFullLogOut, setIsSuccessFullLogOut] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!currentUserState.currentUser) {\r\n      return;\r\n    }\r\n\r\n    setBio(currentUserState.currentUser.bio);\r\n    setEmail(currentUserState.currentUser.email);\r\n    setUsername(currentUserState.currentUser.username);\r\n  }, [currentUserState.currentUser]);\r\n\r\n  useEffect(() => {\r\n    if (!response) {\r\n      return;\r\n    }\r\n\r\n    dispatch({\r\n      type: \"SET_AUTHORIZED\",\r\n      payload: response.user,\r\n    });\r\n  }, [response, dispatch]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    doFetch({\r\n      method: \"put\",\r\n      data: {\r\n        user: {\r\n          ...currentUserState.currentUser,\r\n          username,\r\n          bio,\r\n          email,\r\n          password,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const logOut = (e) => {\r\n    e.preventDefault();\r\n\r\n    setToken(\"\");\r\n\r\n    dispatch({\r\n      type: \"LOGOUT\",\r\n    });\r\n\r\n    setIsSuccessFullLogOut(true);\r\n  };\r\n\r\n  if (isSuccessFullLogOut) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"settings-page\">\r\n      <div className=\"container page\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3 col-xs-12\">\r\n            <h1 className=\"text-xs-center\">Your Settings</h1>\r\n            {error && <BackendErrorMessages backendError={error.errors} />}\r\n            <form onSubmit={handleSubmit}>\r\n              <fieldset>\r\n                <fieldset className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Username\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                  />\r\n                </fieldset>\r\n                <fieldset className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    rows=\"9\"\r\n                    placeholder=\"Short bio\"\r\n                    value={bio || \"bio\"}\r\n                    onChange={(e) => setBio(e.target.value)}\r\n                  ></textarea>\r\n                </fieldset>\r\n                <fieldset className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </fieldset>\r\n                <fieldset className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </fieldset>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-lg btn-primary pull-xs-right\"\r\n                >\r\n                  Update Settings\r\n                </button>\r\n              </fieldset>\r\n            </form>\r\n            <hr />\r\n            <button className=\"btn btn-outline-danger\" onClick={logOut}>\r\n              Or click here to logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;\r\n","import React, { useEffect } from \"react\";\r\nimport useFetch from \"../../../hooks/useFetch\";\r\nimport { stringify } from \"query-string\";\r\nimport { getPaginator, limit } from \"../../../utils\";\r\nimport Pagination from \"../../../components/pagination\";\r\nimport Loading from \"../../../components/loading\";\r\nimport Error from \"../../../components/error\";\r\nimport Feed from \"../../../components/feed\";\r\n\r\nconst getApiUrl = ({ username, offset, isFavorites }) => {\r\n  const params = isFavorites\r\n    ? { limit, offset, favorited: username }\r\n    : { limit, offset, author: username };\r\n\r\n  return `articles/?${stringify(params)}`;\r\n};\r\n\r\nconst ArticlesInfo = ({ articles, total, limit, url, currentPage }) => {\r\n  if (articles.length) {\r\n    return (\r\n      <>\r\n        <Feed articles={articles} />\r\n        <Pagination\r\n          total={total}\r\n          limit={limit}\r\n          url={url}\r\n          currentPage={currentPage}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return <p>No articles are here... yet.</p>;\r\n};\r\n\r\nconst UserArticles = ({ username, location, isFavorites, url }) => {\r\n  const { offset, currentPage } = getPaginator(location.search);\r\n  const apiUrl = getApiUrl({ username, offset, isFavorites });\r\n  const [{ response, isLoading, error }, doFetch] = useFetch(apiUrl, {});\r\n\r\n  useEffect(() => {\r\n    doFetch();\r\n  }, [doFetch, isFavorites]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Loading />}\r\n      {error && <Error />}\r\n      {response && (\r\n        <ArticlesInfo\r\n          articles={response.articles}\r\n          total={response.articlesCount}\r\n          limit={limit}\r\n          url={url}\r\n          currentPage={currentPage}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserArticles;\r\n","import React, { useEffect } from \"react\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport UserArticles from \"./components/userArticles\";\r\n\r\nconst UserProfile = ({ location, match }) => {\r\n  const slug = match.params.slug;\r\n  const isFavorites = location.pathname.includes(\"favorites\");\r\n  const apiUrl = `profiles/${slug}`;\r\n  const [{ response }, doFetch] = useFetch(apiUrl, {});\r\n\r\n  useEffect(() => {\r\n    doFetch();\r\n  }, [doFetch, slug]);\r\n\r\n  return (\r\n    <>\r\n      {response && (\r\n        <div className=\"profile-page\">\r\n          <div className=\"user-info\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-xs-12 col-md-10 offset-md-1\">\r\n                  <h4>{response.profile.username}</h4>\r\n                  <p>{response.profile.bio}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-12 col-md-10 offset-md-1\">\r\n                <div className=\"articles-toggle\">\r\n                  <ul className=\"nav nav-pills outline-active\">\r\n                    <li className=\"nav-item\">\r\n                      <NavLink\r\n                        to={`/profiles/${response.profile.username}`}\r\n                        className=\"nav-link\"\r\n                        exact\r\n                      >\r\n                        {`${response.profile.username}'s posts`}\r\n                      </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <NavLink\r\n                        to={`/profiles/${response.profile.username}/favorites`}\r\n                        className=\"nav-link\"\r\n                      >\r\n                        {`${response.profile.username}'s favorites Posts`}\r\n                      </NavLink>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <UserArticles\r\n                  username={response.profile.username}\r\n                  location={location}\r\n                  isFavorites={isFavorites}\r\n                  url={match.url}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\nimport GlobalFeed from \"./pages/globalFeed\";\r\nimport TagFeed from \"./pages/tagFeed\";\r\nimport YourFeed from \"./pages/yourFeed\";\r\nimport Article from \"./pages/article\";\r\nimport CreateArticle from \"./pages/createArticle\";\r\nimport EditArticle from \"./pages/editArticle\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Authentication from \"./pages/authentication\";\r\nimport SettingsPage from \"./pages/settings\";\r\nimport UserProfile from \"./pages/userProfile\";\r\n\r\nexport default () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" component={GlobalFeed} exact />\r\n      <Route path=\"/feed\" component={YourFeed} />\r\n      <Route path=\"/articles/new\" component={CreateArticle} />\r\n      <Route path=\"/articles/:slug/edit\" component={EditArticle} />\r\n      <Route path=\"/articles/:slug\" component={Article} />\r\n      <Route path=\"/tags/:slug\" component={TagFeed} />\r\n      <Route path=\"/login\" component={Authentication} />\r\n      <Route path=\"/register\" component={Authentication} />\r\n      <Route path=\"/settings\" component={SettingsPage} />\r\n      <Route path=\"/profiles/:slug\" component={UserProfile} />\r\n      <Route path=\"/profiles/:slug/favorites\" component={UserProfile} />\r\n    </Switch>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { CurrentUserContext } from \"../contexts/currentUser\";\r\n\r\nconst TopBar = () => {\r\n  const [{ isLoggedIn, currentUser }] = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-light\">\r\n      <div className=\"container\">\r\n        <NavLink to=\"/\" className=\"navbar-brand\">\r\n          Medium\r\n        </NavLink>\r\n        <ul className=\"nav navbar-nav pull-xs-right\">\r\n          <li className=\"nav-item\">\r\n            <NavLink to=\"/\" className=\"nav-link\" exact>\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n\r\n          {isLoggedIn && (\r\n            <>\r\n              <li className=\"nav-item\">\r\n                <NavLink to=\"/articles/new\" className=\"nav-link\">\r\n                  <i className=\"ion-compose\"></i>\r\n                  &nbsp; New Post\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink to=\"/settings\" className=\"nav-link\">\r\n                  <i className=\"ion-gear-a\"></i>\r\n                  &nbsp; Settings\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  to={`/profiles/${currentUser.username}`}\r\n                  className=\"nav-link\"\r\n                >\r\n                  &nbsp; {currentUser.username}\r\n                </NavLink>\r\n              </li>\r\n            </>\r\n          )}\r\n\r\n          {!isLoggedIn && (\r\n            <>\r\n              <li className=\"nav-item\">\r\n                <NavLink to=\"/login\" className=\"nav-link\" exact>\r\n                  Sign in\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <NavLink to=\"/register\" className=\"nav-link\" exact>\r\n                  Sign up\r\n                </NavLink>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","import { useEffect, useContext } from \"react\";\r\nimport useFetch from \"../hooks/useFetch\";\r\nimport { CurrentUserContext } from \"../contexts/currentUser\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\n\r\nconst CurrentUserChecker = ({ children }) => {\r\n  const [{ response }, doFetch] = useFetch(\"user\", {});\r\n  const [, dispatch] = useContext(CurrentUserContext);\r\n  const [token] = useLocalStorage(\"token\");\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      dispatch({\r\n        type: \"SET_UNAUTHORIZED\",\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    doFetch();\r\n\r\n    dispatch({\r\n      type: \"LOADING\",\r\n    });\r\n  }, [token, doFetch, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!response) {\r\n      return;\r\n    }\r\n\r\n    dispatch({\r\n      type: \"SET_AUTHORIZED\",\r\n      payload: response.user,\r\n    });\r\n  }, [response, dispatch]);\r\n\r\n  return children;\r\n};\r\n\r\nexport default CurrentUserChecker;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Routes from \"./routes\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport TopBar from \"./components/topBar\";\r\nimport CurrentUserChecker from \"./components/currentUserChecker\";\r\nimport { CurrentUserProvider } from \"./contexts/currentUser\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <CurrentUserProvider>\r\n      <CurrentUserChecker>\r\n        <Router basename=\"/Medium-clone\">\r\n          <TopBar />\r\n          <Routes />\r\n        </Router>\r\n      </CurrentUserChecker>\r\n    </CurrentUserProvider>\r\n  );\r\n};\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}